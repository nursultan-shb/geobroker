
- name: Create LoadBalancer-Server EC2 instance
  ec2:
    key_name: "{{ keypair }}"
    group_id: "{{ group_id }}"
    instance_type: "{{ loadbalancer_instance_type }}"
    image: "{{ ami }}"
    wait: true
    count: 1
    vpc_subnet_id: "{{ created_subnet.subnet.id }}"
    assign_public_ip: yes
    instance_tags:
        instance_class: "{{ id }}-servers"
  register: ec2_load_balancer

- name: "Set fact: LoadBalancer-Server public IP"
  set_fact:
    loadbalancer_ip_address: "{{ ec2_load_balancer.instances[0].public_ip }}"
    
- name: LoadBalancer-Server's public IP    
  debug:
    var: loadbalancer_ip_address
    
- name: Add LoadBalancer's IP to GeoBroker configuration file
  lineinfile:
    path: "{{ geobroker_path }}configuration.toml"
    regexp: '^loadBalancerAddress = '
    line: 'loadBalancerAddress = "tcp://{{ loadbalancer_ip_address }}:5559"'
    mode: '0644'
    
- name: Add LoadBalancer's IP to LoadBalancer-Server configuration file
  lineinfile:
    path: "{{ loadbalancer_path }}configuration.toml"
    regexp: '^address = '
    line: 'address = "tcp://{{ loadbalancer_ip_address }}"'
    mode: '0644'    
    
- name: Add LoadBalancer's IP to Variables
  lineinfile:
    path: "variables.yml"
    regexp: '^loadbalancer_ip:'
    line: 'loadbalancer_ip: {{ loadbalancer_ip_address }}'
    mode: '0644'
    
- lineinfile:
    path: "variables.yml"
    regexp: '^lb_instance_id:'
    line: 'lb_instance_id: {{ ec2_load_balancer.instances[0].id }}'         
    mode: '0644'    
   
- name: Add host to group 'LoadBalancer'
  add_host:
    name: "{{ loadbalancer_ip_address }}"
    groups: 
      - loadbalancer_group
      - loadbalancer_server_group

- name: Wait for SSH to become open on the host
  wait_for:
    host: "{{ loadbalancer_ip_address }}"
    port: 22
    delay: 4